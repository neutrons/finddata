[project]
name = "finddata"
description = "A program to find data files using ONCat"
#dynamic = ["version"]
#requires-python = ">=3.10"
dependencies = [
  # list all runtime dependencies here
  "argcomplete",
]
license = { text = "MIT" }
version = "0.10.0"

[project.urls]
homepage = "https://github.com/neutrons/finddata/"  # if no homepage, use repo url

[build-system]
requires = [
  "setuptools >= 42",
  "wheel",
  "toml",
  "urllib3",
  "versioningit"
]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}_.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "src/finddata/_version.py"

[tool.versioningit.onbuild]
source-file = "src/finddata/_version.py"
build-file = "finddata/_version.py"
replacement = "{next_version}"

[tool.ruff]
line-length = 119


[tool.setuptools.packages.find]
where = ["src", "scripts/finddata"]
#exclude = ["tests*", "scripts*", "docs*", "notebooks*"]

[tool.setuptools.package-data]
"*" = ["*.yml","*.yaml","*.ini"]

[project.scripts]
finddata = "scripts.finddata:main"



[project.optional-dependencies]
bashcompletion = ["argcomplete"]

[tool.setuptools.data-files]
"/etc/bash_completion.d" = ["finddata.bashcomplete"]



[tool.pytest.ini_options]
pythonpath = [
  ".", "finddata", "scripts"
]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [".git", "tmp*", "_tmp*", "__pycache__", "*dataset*", "*data_set*"]
markers = [
    "mymarker: example markers goes here"
]

[tool.ruff]
line-length = 120
select = ["A", "ARG", "BLE", "E", "F", "I", "PT"]
ignore = ["F403", "F405", # wild imports and  unknown names
]
extend-exclude = ["conftest.py"]
