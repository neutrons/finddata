[project]
name = "finddata"
authors = [
  { name = "Pete Peterson", email = "petersonpf@ornl.gov" },
  { name = "Chen Zhang", email = "zhangc@ornl.gov" },
]
description = "A program to find data files using ONCat"
version = "0.12.0"
requires-python = ">=3.9"
license = { text = "MIT" }
keywords = ["neutrons", "finddata", "ONCat"]
readme = "README.md"
dependencies = ["urllib3"] # let pypi and system packages figure out things

[project.scripts]
finddata = "finddata.cli:main"

[project.urls]
homepage = "https://github.com/neutrons/finddata/"
repository = "https://github.com/neutrons/finddata/"
documentation = "https://github.com/neutrons/finddata/"
issues = "https://github.com/neutrons/finddata/issues"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

# -------------------- #
# PyTest configuration #
# -------------------- #
[tool.pytest.ini_options]
addopts = "-v --cov=finddata --cov-report=term-missing"
pythonpath = [".", "src", "scripts", "finddata"]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [
  ".git",
  "tmp*",
  "_tmp*",
  "__pycache__",
  "*dataset*",
  "*data_set*",
]
markers = ["mymarker: example markers goes here"]

# ------------------ #
# Ruff configuration #
# ------------------ #
[tool.ruff]
target-version = "py311"
line-length = 120
exclude = ["conftest.py"]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "ASYNC",
  "BLE",
  "C90",
  "E",
  "F",
  "I",
  "N",
  "PT",
  "UP032",
  "W",
]
ignore = ["F403", "F405", "N802", "N803", "C901", "N806"]

[tool.ruff.lint.isort]
known-first-party = ["finddata"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# ------------------ #
# Pixi configuration #
# ------------------ #
[tool.pixi.workspace]
preview = ["pixi-build"]                                                         # Need this to access pixi-build feature
channels = ["conda-forge", "https://prefix.dev/pixi-build-backends", "neutrons"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.dependencies]
plot-publisher = ">=1.0,<2.0"

[tool.pixi.pypi-dependencies]
finddata = { path = ".", editable = true }
ty = ">=0.0.1a8,<0.0.1a9"

[tool.pixi.package]
name = "finddata"

[tool.pixi.package.build]
backend = { name = "pixi-build-python", version = "0.1.*" }

[tool.pixi.package.host-dependencies]
hatchling = "*"

[tool.pixi.package.run-dependencies]
plot-publisher = ">=1.0,<2.0"
urllib3 = ">=2.2.3,<3"

[tool.pixi.tasks]
# PyPI
build-sdist = { cmd = "hatch build -t sdist", description = "Build the source distribution (tar.gz)" }
build-pypi = { cmd = "hatch build -t wheel", description = "Build the package for PyPI" }
clean-pypi = { cmd = "rm -rf dist", description = "Clean the PyPI build artifacts" }
publish-pypi = { cmd = "twine upload dist/*", description = "Publish the package to PyPI", depends-on = [
  "build-pypi",
] }
# Conda
build-conda = { cmd = "pixi build", description = "Build the conda package command" }
clean-conda = { cmd = "rm finddata-*.conda", description = "Clean the conda build artifacts" }
# MISC
clean-all = { description = "Clean all build artifacts", depends-on = [
  "clean-pypi",
  "clean-conda",
] }
audit-deps = { cmd = "pip-audit --local -s osv" }

[tool.pixi.feature.package.dependencies]
anaconda-client = ">=1.13.0,<2"
twine = ">=6.1.0,<7"
hatch = "*"

[tool.pixi.feature.developer.dependencies]
pip = "*"
pre-commit = "*"
argcomplete = "*"
pip-audit = ">=2.9.0,<3"

[tool.pixi.environments]
default = { features = ["package", "developer"], solve-group = "default" }
